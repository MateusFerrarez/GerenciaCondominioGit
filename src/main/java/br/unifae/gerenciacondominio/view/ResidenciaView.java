/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.unifae.gerenciacondominio.view;

import br.unifae.gerenciacondominio.controller.ProprietariosController;
import br.unifae.gerenciacondominio.controller.ResidenciaController;
import br.unifae.gerenciacondominio.model.DbSingleton;
import br.unifae.gerenciacondominio.model.factory.FactoryProprietario;
import java.awt.Frame;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.SQLException;
import java.sql.SQLIntegrityConstraintViolationException;
import javax.swing.JDialog;
import javax.swing.JOptionPane;

/**
 *
 * @author mateu
 */
public class ResidenciaView extends javax.swing.JFrame {

    private Connection connection;
    private ResidenciaController controller;

    /**
     * Creates new form ResidenciaView
     */
    public ResidenciaView() {
        initComponents();

        try {
            connection = DbSingleton.getInstancia().getConnection();
            controller = new ResidenciaController(connection);
            controller.fillTable(jTable1);
        } catch (SQLException sqle) {
            System.out.println("ERRO AO PREENCHER TABELA - MSG - " + sqle);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnEditar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnVoltar = new javax.swing.JButton();
        btnCadastrar = new javax.swing.JButton();
        btnAtribuir = new javax.swing.JButton();
        txtBuscaEndereco = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnParcela = new javax.swing.JButton();
        btnApagar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Tela de residencias");

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "RUA", "CEP", "NUMERO"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setToolTipText("");
        jTable1.setColumnSelectionAllowed(true);
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable1.setShowGrid(true);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        btnVoltar.setText("Voltar");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        btnCadastrar.setText("Cadastrar");
        btnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarActionPerformed(evt);
            }
        });

        btnAtribuir.setText("Atribuir proprietario");
        btnAtribuir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtribuirActionPerformed(evt);
            }
        });

        txtBuscaEndereco.setToolTipText("");

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        jLabel1.setText("Buscar residencia por rua");

        btnParcela.setText("Parcelas");
        btnParcela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnParcelaActionPerformed(evt);
            }
        });

        btnApagar.setText("Apagar");
        btnApagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApagarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 711, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnCadastrar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEditar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAtribuir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnParcela)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnApagar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnVoltar))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtBuscaEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnBuscar))
                            .addComponent(jLabel1))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBuscaEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnVoltar)
                    .addComponent(btnCadastrar)
                    .addComponent(btnEditar)
                    .addComponent(btnAtribuir)
                    .addComponent(btnParcela)
                    .addComponent(btnApagar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        final int linhaSelecionada = jTable1.getSelectedRow();

        if (linhaSelecionada == -1) {
            JOptionPane.showMessageDialog(rootPane, "Selecione uma residencia antes!", "Aviso!", JOptionPane.WARNING_MESSAGE);

            return;
        }

        final String idSelecionado = jTable1.getValueAt(linhaSelecionada, 0).toString();

        try {
            JDialog modalDialog = new ManipulaResidencia((Frame) getParent(), "Editar residencia", true, connection, idSelecionado);
            modalDialog.addWindowListener(new WindowAdapter() {
                @Override
                public void windowClosed(WindowEvent e) {
                    try {
                        controller.fillTable(jTable1);
                    } catch (SQLException exception) {
                        System.out.println("ERRO AO PRENCHER RESIDENCIA - " + exception);
                    }
                }
            });
            modalDialog.setSize(550, 400);
            modalDialog.setLocationRelativeTo((Frame) getParent());
            modalDialog.setVisible(true);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Erro desconhecido ao editar residencia!", "Erro!", JOptionPane.ERROR_MESSAGE);

            System.out.println("ERRO AO EDITAR RESIDENCIA - " + e);

        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        HomeView homeView = new HomeView();
        homeView.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void btnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarActionPerformed
        try {
            JDialog modalDialog = new ManipulaResidencia((Frame) getParent(), "Cadastrar residencia", true, connection);
            modalDialog.addWindowListener(new WindowAdapter() {
                @Override
                public void windowClosed(WindowEvent e) {
                    try {
                        controller.fillTable(jTable1);
                    } catch (SQLException exception) {
                        System.out.println("ERRO AO PRENCHER RESIDENCIA - " + exception);
                    }
                }
            });
            modalDialog.setSize(550, 400);
            modalDialog.setLocationRelativeTo((Frame) getParent());
            modalDialog.setVisible(true);
        } catch (Exception sQLException) {
            JOptionPane.showMessageDialog(rootPane, "Erro desconhecido ao cadastrar residencia!", "Erro!", JOptionPane.ERROR_MESSAGE);

            System.out.println("ERRO AO CADASTRAR RESIDENCIA - " + sQLException);
        }
    }//GEN-LAST:event_btnCadastrarActionPerformed

    private void btnAtribuirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtribuirActionPerformed
        final int linhaSelecionada = jTable1.getSelectedRow();

        if (linhaSelecionada == -1) {
            JOptionPane.showMessageDialog(rootPane, "Selecione uma residencia antes!", "Aviso!", JOptionPane.WARNING_MESSAGE);

            return;
        }

        final String idSelecionado = jTable1.getValueAt(linhaSelecionada, 0).toString();

        final String idProprietario = JOptionPane.showInputDialog(rootPane, "ID do proprietario");

        if (idProprietario == null || idProprietario.equals("-1")) {
            return;
        }

        try {
            controller.atribuirProprietario(idProprietario, idSelecionado);
            JOptionPane.showMessageDialog(rootPane, "Proprietario atribuido com sucesso!", "Sucesso!", JOptionPane.PLAIN_MESSAGE);

        } catch (SQLIntegrityConstraintViolationException exception) {
            JOptionPane.showMessageDialog(rootPane, "Proprietario não encontrado!", "Erro!", JOptionPane.ERROR_MESSAGE);
        } catch (SQLException exception) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao atribuir proprietario!", "Erro!", JOptionPane.ERROR_MESSAGE);

            System.out.println("ERRO AO ATRIBUIR - " + exception);
        }

    }//GEN-LAST:event_btnAtribuirActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        controller.searchResidenciaByRua(txtBuscaEndereco.getText().toUpperCase(), jTable1);
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnParcelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnParcelaActionPerformed
        final int linhaSelecionada = jTable1.getSelectedRow();

        if (linhaSelecionada == -1) {
            JOptionPane.showMessageDialog(rootPane, "Selecione uma residencia antes!", "Aviso!", JOptionPane.WARNING_MESSAGE);

            return;
        }

        final String idSelecionado = jTable1.getValueAt(linhaSelecionada, 0).toString();
        final Long idLong = Long.parseLong(idSelecionado);

        ParcelasView parcelasView = new ParcelasView(idLong);
        parcelasView.setVisible(true);
    }//GEN-LAST:event_btnParcelaActionPerformed

    private void btnApagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApagarActionPerformed
        final int linhaSelecionada = jTable1.getSelectedRow();

        if (linhaSelecionada == -1) {
            JOptionPane.showMessageDialog(rootPane, "Selecione uma residencia antes!", "Aviso!", JOptionPane.WARNING_MESSAGE);

            return;
        }

        final String idSelecionado = jTable1.getValueAt(linhaSelecionada, 0).toString();
        final Long idLong = Long.parseLong(idSelecionado);

        try {
            controller.deleteResidenciaById(idLong);
            controller.fillTable(jTable1);
            JOptionPane.showMessageDialog(rootPane, "Residencia excluida com sucesso!", "Sucesso!", JOptionPane.PLAIN_MESSAGE);
        } catch (SQLException sqle) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao deletar residencia!", "Erro!", JOptionPane.ERROR_MESSAGE);
            System.out.println("ERRO AO DELETAR RESIDENCIA - MSG - " + sqle);
        }
    }//GEN-LAST:event_btnApagarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ResidenciaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ResidenciaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ResidenciaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ResidenciaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ResidenciaView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApagar;
    private javax.swing.JButton btnAtribuir;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCadastrar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnParcela;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtBuscaEndereco;
    // End of variables declaration//GEN-END:variables
}

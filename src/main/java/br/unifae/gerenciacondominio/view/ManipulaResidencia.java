/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package br.unifae.gerenciacondominio.view;

import br.unifae.gerenciacondominio.controller.EditarProprietarioController;
import br.unifae.gerenciacondominio.controller.ResidenciaController;
import br.unifae.gerenciacondominio.model.ResidenciaDAO;
import br.unifae.gerenciacondominio.model.factory.Factory;
import br.unifae.gerenciacondominio.util.LimitTextFieldChar;
import java.awt.Frame;
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.SQLException;
import javax.swing.JDialog;
import javax.swing.JOptionPane;

/**
 *
 * @author mateu
 */
public class ManipulaResidencia extends JDialog {

    private boolean update;
    private Long idResidencia;
    private ResidenciaController residenciaController;

    /**
     * Creates new form CadastrarResidencia
     */
    public ManipulaResidencia(Frame owner, String title, boolean rootPaneCheckingEnabled, Connection connection) {
        super(owner, title, rootPaneCheckingEnabled);
        initComponents();
        this.residenciaController = new ResidenciaController(connection);
    }

    public ManipulaResidencia(Frame owner, String title, boolean rootPaneCheckingEnabled, Connection connection, String idResidencia) {
        super(owner, title, rootPaneCheckingEnabled);
        initComponents();
        this.residenciaController = new ResidenciaController(connection);
        this.idResidencia = Long.parseLong(idResidencia);
        this.update = true;

        try {
            this.residenciaController.fillInfo(txtRua, txtCep, txtNumero, this.idResidencia);
        } catch (SQLException sQLException) {
            System.out.println("ERRO AO PREENCHER INFO DA RESIDENCIA - MSG - " + sQLException);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtRua = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtCep = new javax.swing.JFormattedTextField();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        txtNumero = new javax.swing.JTextField();

        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Rua:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(31, 31, -1, -1));

        txtRua.setDocument(new LimitTextFieldChar(60));
        txtRua.setPreferredSize(new java.awt.Dimension(200, 30));
        getContentPane().add(txtRua, new org.netbeans.lib.awtextra.AbsoluteConstraints(31, 59, 270, -1));

        jLabel2.setText("CEP:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(31, 103, -1, -1));

        try {
            txtCep.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##.###-###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtCep.setPreferredSize(new java.awt.Dimension(64, 30));
        txtCep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCepActionPerformed(evt);
            }
        });
        getContentPane().add(txtCep, new org.netbeans.lib.awtextra.AbsoluteConstraints(31, 131, 100, -1));

        jLabel3.setText("Numero:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(31, 181, -1, -1));

        jButton1.setText("Gravar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(373, 217, -1, -1));

        txtNumero.setDocument(new LimitTextFieldChar(6));
        txtNumero.setPreferredSize(new java.awt.Dimension(200, 30));
        getContentPane().add(txtNumero, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 215, 141, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void txtCepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCepActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCepActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        final String rua = txtRua.getText();
        final String cep = txtCep.getText().replace(".", "").replace("-", "").trim();
        final String numero = txtNumero.getText();

        if (rua.trim().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Informe a rua da residenca!", "Aviso!", JOptionPane.WARNING_MESSAGE);
            return;
        }

        if (cep.length() < 8) {
            JOptionPane.showMessageDialog(rootPane, "Informe o CEP da residenca!", "Aviso!", JOptionPane.WARNING_MESSAGE);
            return;
        }

        if (numero.trim().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Informe o numero da residenca!", "Aviso!", JOptionPane.WARNING_MESSAGE);
            return;
        }

        try {
            if (!update) {
                residenciaController.insertResidencia(rua, numero, cep);
                JOptionPane.showMessageDialog(rootPane, "Residencia cadastrada com sucesso!", "Sucesso!", JOptionPane.PLAIN_MESSAGE);
                this.dispose();
                return;
            }

            residenciaController.updateResidencia(this.idResidencia, rua, numero, cep);
            JOptionPane.showMessageDialog(rootPane, "Residencia editada com sucesso!", "Sucesso!", JOptionPane.PLAIN_MESSAGE);
            this.dispose();
        } catch (SQLException sql) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao cadastrar residencia!", "Erro detectado", JOptionPane.ERROR_MESSAGE);
            System.out.println(sql);
        } catch (HeadlessException exception) {
            JOptionPane.showMessageDialog(rootPane, "Erro desconhecido ao cadastrar residencia!", "Erro detectado", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JFormattedTextField txtCep;
    private javax.swing.JTextField txtNumero;
    private javax.swing.JTextField txtRua;
    // End of variables declaration//GEN-END:variables
}

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package br.unifae.gerenciacondominio.view;

import br.unifae.gerenciacondominio.controller.EditarProprietarioController;
import br.unifae.gerenciacondominio.model.factory.Factory;
import br.unifae.gerenciacondominio.model.factory.FactoryProprietario;
import br.unifae.gerenciacondominio.util.LimitTextFieldChar;
import java.awt.Frame;
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import javax.swing.JDialog;
import javax.swing.JOptionPane;

/**
 *
 * @author mateu
 */
public class ManipulaPessoa extends JDialog {

    private Long idResidencia = 0L;
    private boolean update;
    private Connection connection;
    private Long idPessoa;
    private Factory factory;
    private String tipoPessoa = "Proprietario ";
    private EditarProprietarioController controller;

    public ManipulaPessoa(Frame owner, String title, boolean rootPaneCheckingEnabled, Connection connection, Factory factory) {
        super(owner, title, rootPaneCheckingEnabled);
        initComponents();
        this.factory = factory;
        this.connection = connection;
        txtResidencia.setVisible(false);
        labelResidencia.setVisible(false);
        btnResidencia.setVisible(false);

        if (this.factory.getClass().toString().contains("Morador")) {
            this.tipoPessoa = "Morador ";
            txtResidencia.setVisible(true);
            labelResidencia.setVisible(true);
            btnResidencia.setVisible(true);
        }
    }

    public ManipulaPessoa(Frame owner, String title, boolean rootPaneCheckingEnabled, Connection connection, boolean update, String idPessoa, Factory factory) {
        super(owner, title, rootPaneCheckingEnabled);
        initComponents();
        this.update = update;
        this.idPessoa = Long.parseLong(idPessoa);
        this.factory = factory;
        this.connection = connection;
        txtResidencia.setVisible(false);
        labelResidencia.setVisible(false);
        btnResidencia.setVisible(false);

        controller = new EditarProprietarioController(connection);

        if (this.factory.getClass().toString().contains("Morador")) {
            this.tipoPessoa = "Morador ";
            txtResidencia.setVisible(true);
            labelResidencia.setVisible(true);
            btnResidencia.setVisible(true);
        }

        try {
            if (tipoPessoa.toLowerCase().contains("morador")) {
                controller.fillInfoMorador(txtNome, txtCpf, txtRg, txtDt, txtResidencia, this.idPessoa, this.idResidencia, this.factory);
                this.idResidencia = controller.getIdResidenciaByIdPessoa(this.idPessoa, factory);
            } else {
                controller.fillInfo(txtNome, txtCpf, txtRg, txtDt, this.idPessoa, this.factory);
            }
        } catch (SQLException sqle) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao preencher informacoes!", "Erro detectado", JOptionPane.ERROR_MESSAGE);
            System.out.println("ERRO AO PREENCHER INFORMACOES DO PROPRIETARIO - MSG - " + sqle);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao preencher informacoes!", "Erro detectado", JOptionPane.ERROR_MESSAGE);
            System.out.println("ERRO AO PREENCHER INFORMACOES DO PROPRIETARIO - MSG - " + e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtCpf = new javax.swing.JFormattedTextField();
        jLabel3 = new javax.swing.JLabel();
        txtRg = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        txtDt = new javax.swing.JFormattedTextField();
        btnGravar = new javax.swing.JButton();
        txtResidencia = new javax.swing.JTextField();
        labelResidencia = new javax.swing.JLabel();
        btnResidencia = new javax.swing.JButton();

        jLabel5.setText("jLabel5");

        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Nome:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 30, -1, -1));

        txtNome.setDocument(new LimitTextFieldChar(60));
        txtNome.setPreferredSize(new java.awt.Dimension(200, 30));
        getContentPane().add(txtNome, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 58, 270, -1));

        jLabel2.setText("CPF:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 102, -1, -1));

        try {
            txtCpf.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtCpf.setPreferredSize(new java.awt.Dimension(64, 30));
        txtCpf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCpfActionPerformed(evt);
            }
        });
        getContentPane().add(txtCpf, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 130, 100, -1));

        jLabel3.setText("RG:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 180, -1, -1));

        try {
            txtRg.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##.###.###-#")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtRg.setPreferredSize(new java.awt.Dimension(64, 30));
        getContentPane().add(txtRg, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 208, 100, -1));

        jLabel4.setText("Data de nascimento:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 30, -1, -1));

        try {
            txtDt.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtDt.setPreferredSize(new java.awt.Dimension(64, 30));
        getContentPane().add(txtDt, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 60, 90, -1));

        btnGravar.setText("Gravar");
        btnGravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGravarActionPerformed(evt);
            }
        });
        getContentPane().add(btnGravar, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 210, -1, -1));

        txtResidencia.setEnabled(false);
        getContentPane().add(txtResidencia, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 290, 250, -1));

        labelResidencia.setText("Residencia");
        getContentPane().add(labelResidencia, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 270, -1, -1));

        btnResidencia.setText("Selecionar");
        btnResidencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResidenciaActionPerformed(evt);
            }
        });
        getContentPane().add(btnResidencia, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 290, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void txtCpfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCpfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCpfActionPerformed

    private void btnGravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGravarActionPerformed
        final String nome = txtNome.getText();
        final String cpf = txtCpf.getText().replace(".", "").replace("-", "").trim();
        final String rg = txtRg.getText().replace(".", "").replace("-", "").trim();
        final String dtPura = txtDt.getText().trim().replace("/", "");
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");

        if (nome.trim().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Informe o nome do " + tipoPessoa.toLowerCase().trim() + "!", "Aviso!", JOptionPane.WARNING_MESSAGE);
            return;
        }

        if (cpf.length() < 11) {
            JOptionPane.showMessageDialog(rootPane, "Informe o CPF do " + tipoPessoa.toLowerCase().trim() + "!", "Aviso!", JOptionPane.WARNING_MESSAGE);
            return;
        }

        if (rg.length() < 9) {
            JOptionPane.showMessageDialog(rootPane, "Informe o RG do " + tipoPessoa.toLowerCase().trim() + "!", "Aviso!", JOptionPane.WARNING_MESSAGE);
            return;
        }

        if (dtPura.isEmpty() || dtPura.length() < 8) {
            JOptionPane.showMessageDialog(rootPane, "Informe a data de nascimento do " + tipoPessoa.toLowerCase().trim() + "!", "Aviso!", JOptionPane.WARNING_MESSAGE);
            return;
        }

        if (this.idResidencia == 0L && tipoPessoa.toLowerCase().contains("morador")) {
            JOptionPane.showMessageDialog(rootPane, "Informe uma residencia!", "Aviso!", JOptionPane.WARNING_MESSAGE);
            return;
        }

        LocalDate data = LocalDate.parse(txtDt.getText(), formatter);

        try {
            if (!update) {
                factory.insertPessoa(nome, cpf, rg, data);
                if (tipoPessoa.toLowerCase().contains("morador")) {
                    controller.insertMoradorResidencia(this.idResidencia);
                }
                JOptionPane.showMessageDialog(rootPane, tipoPessoa + "cadastrado com sucesso!", "Sucesso!", JOptionPane.PLAIN_MESSAGE);
                this.dispose();
                return;
            }

            factory.updatePessoa(idPessoa, nome, cpf, rg, data);
            if (tipoPessoa.toLowerCase().contains("morador")) {
                controller.updateMoradorResidencia(idPessoa, this.idResidencia);
            }
            JOptionPane.showMessageDialog(rootPane, tipoPessoa + "editado com sucesso!", "Sucesso!", JOptionPane.PLAIN_MESSAGE);
            this.dispose();
        } catch (SQLException sql) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao cadastrar " + tipoPessoa + "!", "Erro detectado", JOptionPane.ERROR_MESSAGE);
            System.out.println(sql);
        } catch (HeadlessException exception) {
            JOptionPane.showMessageDialog(rootPane, "Erro desconhecido ao cadastrar" + tipoPessoa + "!", "Erro detectado", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnGravarActionPerformed

    private void btnResidenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResidenciaActionPerformed
        final String tempIdResidencia = JOptionPane.showInputDialog(rootPane, "ID da residencia");

        if (tempIdResidencia == null || tempIdResidencia.equals("-1")) {
            return;
        }

        this.idResidencia = Long.parseLong(tempIdResidencia);

        controller = new EditarProprietarioController(this.connection);

        try {
            controller.searchResidenciaById(txtResidencia, this.idResidencia);

        } catch (SQLException exception) {
            this.idResidencia = 0L;
            txtResidencia.setText("");
            System.out.println("ERRO AO PROCURAR RESIDENCIA - MSG - " + exception);
        } catch (RuntimeException e) {
            this.idResidencia = 0L;
            txtResidencia.setText("");
            JOptionPane.showMessageDialog(rootPane, "Residencia não encontrada!", "Erro detectado", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnResidenciaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGravar;
    private javax.swing.JButton btnResidencia;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel labelResidencia;
    private javax.swing.JFormattedTextField txtCpf;
    private javax.swing.JFormattedTextField txtDt;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtResidencia;
    private javax.swing.JFormattedTextField txtRg;
    // End of variables declaration//GEN-END:variables
}
